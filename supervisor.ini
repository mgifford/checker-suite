[inet_http_server]
port=127.0.0.1:8999

[supervisord]
logfile=%(here)s/logs/supervisord.log
loglevel=info
nodaemon=true
childlogdir=logs

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=http://127.0.0.1:8999

[program:master]
command=master
  --listen-address %(ENV_databus_url)s
  --psql-connection-string %(ENV_psql_connection_string)s
  +RTS
  -N2
directory=%(here)s
priority=1                   ; the relative start priority (default 999)
redirect_stderr=true
stdout_logfile=logs/master.stdout.log        ; stdout log path, NONE for none; default AUTO
autorestart=true
stopsignal=INT

[program:crawler-controller]
command=crawler-controller
  --master-address %(ENV_databus_url)s
  --listen-address %(ENV_crawler_controller_url)s
  --psql-connection-string %(ENV_psql_connection_string)s
  +RTS
  -N2
directory=%(here)s
priority=200                   ; the relative start priority (default 999)
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=logs/%(program_name)s.stdout.log        ; stdout log path, NONE for none; default AUTO
numprocs = 1
numprocs_start = 1
autostart=true
autorestart=true
stopsignal=INT

[program:sampler-controller]
command=sampler-controller
  --master-address %(ENV_databus_url)s
  --listen-address %(ENV_sampler_controller_url)s
  --psql-connection-string %(ENV_psql_connection_string)s
  +RTS
  -N1
directory=%(here)s
priority=200                   ; the relative start priority (default 999)
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=logs/%(program_name)s.stdout.log        ; stdout log path, NONE for none; default AUTO
numprocs = 1
numprocs_start = 1
autostart=true
autorestart=true
stopsignal=INT

[program:webpage-wam-controller]
command=webpage-wam-controller
  --master-address %(ENV_databus_url)s
  --listen-address %(ENV_webpage_wam_controller_url)s
  --psql-connection-string %(ENV_psql_connection_string)s
  +RTS
  -N1
directory=%(here)s
priority=200                   ; the relative start priority (default 999)
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=logs/%(program_name)s.stdout.log        ; stdout log path, NONE for none; default AUTO
numprocs = 1
numprocs_start = 1
autostart=true
autorestart=true
stopsignal=INT

[program:wam]
command=sh -c 'sleep 2; exec wam \
  --selenium %(ENV_selenium_server_url)s \
  --logfile logs/%(program_name)s-%(process_num)d.log \
  server \
  --bindaddr tcp://%(ENV_wam_addr)s:%(process_num)d \
  --busaddr %(ENV_databus_url)s \
  +RTS -N1'
process_name = %(program_name)s-%(process_num)d
directory=%(here)s
priority=999                   ; the relative start priority (default 999)
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=logs/%(program_name)s-%(process_num)d.stdout.log        ; stdout log path, NONE for none; default AUTO
numprocs = 1          ; %(ENV_wam_count)
numprocs_start = 9501 ; %(ENV_wam_start_port)
autostart=true

; Workaround for memory leak in wam: Restart it when using
; more than $wam_max_memory RAM.
[eventlistener:memmon]
command=memmon -g wam=%(ENV_wam_max_memory)s
events=TICK_5

; logs/ can become huge; use logrotate to manage it.
[eventlistener:logrotate]
command=tools/runcmd.py /usr/sbin/logrotate --state logrotate.state logrotate.conf
events=TICK_3600

; Automatically restart master if it is not responding to ping through
; httpctl.
[eventlistener:httpok]
command=httpok -m '%(ENV_email_address)s' -p master --not-eager %(ENV_httpctl_url)s/ping
events=TICK_60

; Automatically restart crawler-controller if it is not responding to ping
; through httpctl.
[eventlistener:httpok-crawler-controller]
command=httpok -m '%(ENV_email_address)s' -p crawler-controller --not-eager %(ENV_httpctl_url)s/ping/crawler-controller
events=TICK_60

[program:httpctl]
command=httpctl
  --master-address %(ENV_databus_url)s
  --ttrpc-listen-address %(ENV_httpctl_ttrpc_url)s
  --http-listen-port %(ENV_httpctl_port)s
  --crawler-controller-address %(ENV_crawler_controller_url)s
  --psql-connection-string %(ENV_psql_connection_string)s
  +RTS -N4
directory=%(here)s
priority=999
autostart=true
redirect_stderr=true
stdout_logfile=logs/httpctl.stdout.log
stopsignal=INT

[program:crawler-server]
command=sh -c 'sleep 2; exec python .python-sandbox/bin/eiii_crawler_server.py \
    --bus %(ENV_databus_url)s \
    --bindaddr %(ENV_crawler_addr)s \
    --port=%(process_num)d \
    --nprocs=1 \
    --debug'
process_name = %(program_name)s-%(process_num)d
directory=%(here)s
priority=999
redirect_stderr=true
stopsignal=KILL
stopasgroup=true
stdout_logfile=logs/%(program_name)s-%(process_num)d.stdout.log
numprocs = 1           ; %(crawler_count)d
numprocs_start = 9601  ; %(crawler_start_port)d
autostart = true

[program:selenium-server]
command=java -Xmx1024m -Xms256m
  -jar selenium/selenium-server-standalone.jar
  -port %(ENV_selenium_server_port)s
  -browserSessionReuse
  -ensureCleanSession
  -timeout 30
  -log logs/selenium-server-standalone.log
  -browser browserName=phantomjs,platform=LINUX
  -forcedBrowserModeRestOfLine '*phantomjs'
directory=%(here)s
redirect_stderr=true
stdout_logfile=logs/selenium-server-standalone.stdout.log
priority=999
autostart=true
autorestart=unexpected

